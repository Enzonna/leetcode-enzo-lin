         *  只要 dp[i][L] == true 成立，就表示子串 s[i..L] 是回文，此时记录回文长度和起始位置
         *  只要 dp[i][L] == false ，两种情况：1- s[i,j] 本身就不是回文串
         *                                  2- i > j 此时s[i,j] 不合法
         *  动态规划的状态转移方程：p(i,j) = p(i+1, j-1) ^ (Si == Sj)
         *       解释：只有s[i+1,j-1]是回文串，且s的第i个和第j个字母相同，s[i,j]才是回文串；
         *
         *  动态规划边界条件：p(i,j) = true
         *                   p(i,i+1) = (Si == Si+1)
         *
         *   最终答案为所有p(i,j) = true 中 j-i+1 的最大值
         *
         *   时间O(n2)：动态规划的状态数为O(n2)，对于每个状态，需转移时间为O(1)，空间复杂度O(n2)
